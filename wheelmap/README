// Preliminaries:
The android maven plugin needs at least maven version >= 3.0.3

Android apklib maven dependencies cant be automatically included into Eclipse, and
Eclipse shows errors. Therefore its need to manually include apklib sources as
regular Android Library Projects. 

The needed projects are:
https://github.com/JakeWharton/ActionBarSherlock.git
https://github.com/chrisbanes/Android-PullToRefresh.git
https://github.com/ChristopheVersieux/HoloEverywhere.git

In the top level directory
--------------------------
mvn install -P<profile>
    - compiles and builds in the wheelmap subdir
    - builds and executes integration tests in the wheelmap-it subdir
    - the use of a profile is enforced to configure the build
      The following build config profiles are available: develop, staging, life, production
    - <x>-with/without-ga switches the googleanalytics on and off. Per default, no analytics is included
    - for a production build an alternative-signature is enforced - you need to also specify the alternative-signature profile

To sign the build with an alternative key than the debug key and to zipalign it use
mvn -Palternative-signature \
    -Dsign.keystore=<keystore-file> \
    -Dsign.alias=<alias> \
    -Dsign.storepass=<storepass> \
    -Dsign.keypass=<keypass>

Proguard (but only little tested) can be enabled during release with
    -Dproguard.disable=false
Proguard issues a lot of warnings because of "duplicate definition" of actionbarsherlock stuff. They can be ignored. Instrumentation-Tests in wheelmap-it will fail, as related classes in the wheelmap app are obfuscated by proguard. A release can be also build in the wheelmap subdirectory.

GoogleAnalytics can be enabled (and no dependency to it - so no related code is left)
with the property -Dwith-googleanalytics
Per default google analytics is disabled


In the subdirectory (module) wheelmap
-----------------------------
mvn install -P<profile>
  - compiles and builds
  - requires one of the profiles as in the parent directory

mvn android:deploy
  - the apk is installed on the available device

mvn android:run
  - the (installed) apk is executed on the available device

mvn license:update-file-header
  - an update of the copyright headers is done 

mvn clean install ghDownloads:upload
  - uploads apk to github
  - needs a settings.xml with auth-information 
    see: http://github.com/github/maven-plugins

In the subdirectory (module) wheelmap-it
-------------------------------
mvn integration-test -P<profile>
  - executes the instrumentation tests, the wheelmap.apk needs to be installed for that 
  - requires one of the profiles as in the parent directory
